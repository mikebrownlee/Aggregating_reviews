#!/usr/bin/env python3


import requests
import pandas as pd

# Replace with your API keys
GOOGLE_API_KEY = "YOUR_GOOGLE_API_KEY"
BING_API_KEY = "YOUR_BING_API_KEY"

# Replace with the company name and location you want to search for
COMPANY_NAME = "Company Name"
LOCATION = "City, Country"

# Google Places API
def get_google_reviews(place_id):
    url = f"https://maps.googleapis.com/maps/api/place/details/json?place_id={place_id}&fields=name,rating,reviews&key={GOOGLE_API_KEY}"
    response = requests.get(url)
    data = response.json()
    
    reviews = []
    if "reviews" in data["result"]:
        for review in data["result"]["reviews"]:
            reviews.append({
                "source": "Google Maps",
                "author_name": review["author_name"],
                "rating": review["rating"],
                "text": review["text"],
            })
    return reviews

# Bing Local Search API
def get_bing_reviews(query):
    url = f"https://api.bing.microsoft.com/v7.0/local/search?q={query}&count=1"
    headers = {"Ocp-Apim-Subscription-Key": BING_API_KEY}
    response = requests.get(url, headers=headers)
    data = response.json()
    
    reviews = []
    if "value" in data and len(data["value"]) > 0:
        business = data["value"][0]
        if "review" in business:
            for review in business["review"]["reviews"]:
                reviews.append({
                    "source": "Bing",
                    "author_name": review["author"]["name"],
                    "rating": review["rating"],
                    "text": review["text"],
                })
    return reviews

# Main function to aggregate reviews
def aggregate_reviews():
    # Google Maps
    place_id = get_google_place_id(COMPANY_NAME, LOCATION)
    google_reviews = get_google_reviews(place_id)
    
    # Bing Local Search
    bing_reviews = get_bing_reviews(f"{COMPANY_NAME} {LOCATION}")
    
    # Combine the reviews
    all_reviews = google_reviews + bing_reviews
    reviews_df = pd.DataFrame(all_reviews)
    
    return reviews_df

# Run the function and display the result
reviews_df = aggregate_reviews()
print(reviews_df)
